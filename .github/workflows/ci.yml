# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI

on:
  workflow_dispatch: null

  push:
    branches:
      - '**'

  pull_request:
    types: [closed]
    branches:
      - main

env:
  GO_VERSION: 1.21

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Display GitHub event action
        run: |
          echo "GitHub event action: ${{ github.event.action }}"

  Analyze:
    needs: [Setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: |
          go install go.uber.org/mock/mockgen@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Generate Mocks
        run: go generate ./...

      - name: Lint
        run: golangci-lint run ./...

  Test:
    needs: [Setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: |
          go install go.uber.org/mock/mockgen@latest
          go install github.com/jstemmer/go-junit-report@latest
          go install github.com/onsi/ginkgo/v2/ginkgo

      - name: Generate Mocks
        run: go generate ./...

      - name: Test
        run: ginkgo --junit-report=junit.xml ./...

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
          fail_on_failure: true
          require_tests: true
          annotate_notice: false
          detailed_summary: false

  Build:
    needs: [Analyze, Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: |
          go mod download

      - name: Build
        run: make build

  Publish:
    needs: [Build]
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
